plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2' // Spring Boot plugin
	id 'io.spring.dependency-management' version '1.1.7' // Dependency management plugin
}

group = 'com.Colombus'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17) // Use Java 17
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral() // Use Maven Central for dependencies
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA for database interaction
	implementation 'org.springframework.boot:spring-boot-starter-web' // Web support for REST APIs
	implementation 'org.springframework.boot:spring-boot-starter-security' // For security (JWT, etc.)
	implementation 'org.springframework.boot:spring-boot-starter-validation' // For validation annotations
	implementation 'org.springframework.boot:spring-boot-starter-actuator' // For health checks and monitoring

	// JWT Libraries for token handling
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Lombok for reducing boilerplate code
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// DevTools for development environment (hot swapping, etc.)
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// MySQL Driver to connect to your Railway MySQL instance
	runtimeOnly 'com.mysql:mysql-connector-j'

	// H2 in-memory database for testing
	runtimeOnly 'com.h2database:h2'

	// Testing dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test' // Test support
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // JUnit 5 support for testing
}

tasks.named('test') {
	useJUnitPlatform() // Enable JUnit platform for testing
}

bootJar {
	archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}
