# Application name
spring.application.name=HotelManagement

# Database configuration for Railway MySQL
spring.datasource.url=jdbc:mysql://interchange.proxy.rlwy.net:51329/railway
spring.datasource.username=root
spring.datasource.password=WPnZzNdZaRfvAGgnGdesmxWYyFfxVfYo
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate and JPA settings
spring.jpa.show-sql=true
# You can change this to 'validate' or 'none' in production
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# Optionally pretty print SQL
spring.jpa.properties.hibernate.format_sql=true

# Server configuration - use PORT environment variable provided by Railway
server.port=${PORT:8081}

# CORS settings to allow frontend access
spring.mvc.cors.allowed-origins=*
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.allow-credentials=true

# JWT (JSON Web Token) configuration
# Replace with a real secret key
jwt.secret=your-secret-key
# JWT expiration in milliseconds (1 hour)
jwt.expiration=3600000

# Optional configuration to allow circular references (useful for certain beans)
spring.main.allow-circular-references=true

# Enable detailed logging for debugging (can be turned off for production)
logging.level.org.springframework.jdbc=INFO
logging.level.org.hibernate.SQL=INFO
logging.level.org.springframework.orm.jpa=INFO
logging.level.com.Colombus.HotelManagement=INFO
logging.level.org.springframework.security=INFO

# Spring Boot auto configuration properties
spring.main.web-application-type=servlet
# Removed the DataSourceAutoConfiguration exclusion to allow proper database connectivity

# Database connection pool settings for production
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# Enable auto configuration for MySQL
spring.datasource.initialization-mode=always

# Add H2 dependency to build.gradle if not already present
# implementation 'com.h2database:h2'
